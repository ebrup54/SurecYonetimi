{"version":3,"file":"accordion-group.component.d.ts","sources":["accordion-group.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, OnInit, EventEmitter } from '@angular/core';\r\nimport { AccordionComponent } from './accordion.component';\r\n/**\r\n * ### Accordion heading\r\n * Instead of using `heading` attribute on the `accordion-group`, you can use\r\n * an `accordion-heading` attribute on `any` element inside of a group that\r\n * will be used as group's header template.\r\n */\r\nexport declare class AccordionPanelComponent implements OnInit, OnDestroy {\r\n    /** turn on/off animation */\r\n    isAnimated: boolean;\r\n    /** Clickable text in accordion's group header, check `accordion heading` below for using html in header */\r\n    heading: string;\r\n    /** Provides an ability to use Bootstrap's contextual panel classes\r\n     * (`panel-primary`, `panel-success`, `panel-info`, etc...).\r\n     * List of all available classes [available here]\r\n     * (https://getbootstrap.com/docs/3.3/components/#panels-alternatives)\r\n     */\r\n    panelClass: string;\r\n    /** if <code>true</code> â€” disables accordion group */\r\n    isDisabled: boolean;\r\n    /** Emits when the opened state changes */\r\n    isOpenChange: EventEmitter<boolean>;\r\n    /** Is accordion group open or closed. This property supports two-way binding */\r\n    isOpen: boolean;\r\n    readonly isBs3: boolean;\r\n    protected _isOpen: boolean;\r\n    protected accordion: AccordionComponent;\r\n    constructor(accordion: AccordionComponent);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    toggleOpen(): void;\r\n}\r\n"]}